//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventBasedClient.JCDecauxEventBased {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JCDecauxEventBased.IJCDecauxEventBased", CallbackContract=typeof(EventBasedClient.JCDecauxEventBased.IJCDecauxEventBasedCallback))]
    public interface IJCDecauxEventBased {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/SubscribeStationChanged", ReplyAction="http://tempuri.org/IJCDecauxEventBased/SubscribeStationChangedResponse")]
        void SubscribeStationChanged(string contract, string station, int timer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/SubscribeStationChanged", ReplyAction="http://tempuri.org/IJCDecauxEventBased/SubscribeStationChangedResponse")]
        System.Threading.Tasks.Task SubscribeStationChangedAsync(string contract, string station, int timer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/GetStations", ReplyAction="http://tempuri.org/IJCDecauxEventBased/GetStationsResponse")]
        WpfApp1.JCDecaux.Station[] GetStations(string contract, int timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/GetStations", ReplyAction="http://tempuri.org/IJCDecauxEventBased/GetStationsResponse")]
        System.Threading.Tasks.Task<WpfApp1.JCDecaux.Station[]> GetStationsAsync(string contract, int timeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/GetContracts", ReplyAction="http://tempuri.org/IJCDecauxEventBased/GetContractsResponse")]
        string[] GetContracts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxEventBased/GetContracts", ReplyAction="http://tempuri.org/IJCDecauxEventBased/GetContractsResponse")]
        System.Threading.Tasks.Task<string[]> GetContractsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJCDecauxEventBasedCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJCDecauxEventBased/StationChanged")]
        void StationChanged(WpfApp1.JCDecaux.Station station);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJCDecauxEventBasedChannel : EventBasedClient.JCDecauxEventBased.IJCDecauxEventBased, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JCDecauxEventBasedClient : System.ServiceModel.DuplexClientBase<EventBasedClient.JCDecauxEventBased.IJCDecauxEventBased>, EventBasedClient.JCDecauxEventBased.IJCDecauxEventBased {
        
        public JCDecauxEventBasedClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JCDecauxEventBasedClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JCDecauxEventBasedClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JCDecauxEventBasedClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JCDecauxEventBasedClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SubscribeStationChanged(string contract, string station, int timer) {
            base.Channel.SubscribeStationChanged(contract, station, timer);
        }
        
        public System.Threading.Tasks.Task SubscribeStationChangedAsync(string contract, string station, int timer) {
            return base.Channel.SubscribeStationChangedAsync(contract, station, timer);
        }
        
        public WpfApp1.JCDecaux.Station[] GetStations(string contract, int timeout) {
            return base.Channel.GetStations(contract, timeout);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.JCDecaux.Station[]> GetStationsAsync(string contract, int timeout) {
            return base.Channel.GetStationsAsync(contract, timeout);
        }
        
        public string[] GetContracts() {
            return base.Channel.GetContracts();
        }
        
        public System.Threading.Tasks.Task<string[]> GetContractsAsync() {
            return base.Channel.GetContractsAsync();
        }
    }
}
